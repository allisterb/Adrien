<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="netstandard.dll" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="$(SolutionDir)..\..\..\lib\netstandard2.0\Humanizer.dll" #>
<#@ assembly name="$(TargetDir)Adrien.Core.dll" #>
<#@ import namespace="Adrien.Notation" #>
<#@ output extension=".cs" #>
namespace Adrien.Notation
{
	public partial class Scalar
	{
<#for (int i = 2; i < 100; i++)
{
		string n = Tensor.RankToTensorName(i);
#>
		public new (<# for (int j = 1; j < i; j++) {#>Scalar, <#}#>Scalar) <#=n#>() => (this<# for (int j = 1; j < i; j++) {#>, new Scalar(this.GenerateName(<#=j#>, this.Name))<#}#>);
		public new (<# for (int j = 1; j < i; j++) {#>Scalar, <#}#>Scalar) <#=n#>(<# for (int j = 1; j < i; j++) {#>string name<#=j#>, <#}#>string name<#=i#>) => (<# for (int j = 1; j < i; j++) {#>new Scalar(name<#=j#>),<#}#>new Scalar(name<#=i#>));
<#}#>
	}
}